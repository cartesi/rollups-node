# (c) Cartesi and individual authors (see AUTHORS)
# SPDX-License-Identifier: Apache-2.0 (see LICENSE)

#
# Logging
#

[logging.CARTESI_LOG_LEVEL]
default = "info"
go-type = "LogLevel"
description = """
One of "debug", "info", "warn", "error"."""

[logging.CARTESI_LOG_PRETTY]
default = "false"
go-type = "bool"
description = """
If set to true, the node will add colors to its log output."""

#
# Features
#

[features.CARTESI_FEATURE_HOST_MODE]
default = "false"
go-type = "bool"
description = """
If set to true, the node will run in host mode.

In host mode, computations will not be performed by the cartesi machine.
You should only use host mode for development and debugging!"""

[features.CARTESI_FEATURE_DISABLE_CLAIMER]
default = "false"
go-type = "bool"
description = """
If set to true, the node will not make claims."""

[features.CARTESI_FEATURE_DISABLE_MACHINE_HASH_CHECK]
default = "false"
go-type = "bool"
description = """
If set to true, the node will *not* check whether the Cartesi machine hash from
the snapshot matches the hash in the Application contract."""

#
# Rollups
#

[rollups.CARTESI_EPOCH_DURATION]
default = "86400" # 1 day in seconds
go-type = "Duration"
description = """
Duration of a rollups epoch in seconds.

At the end of each epoch, the node will send claims to the blockchain."""

#
# Blockchain
#

[blockchain.CARTESI_BLOCKCHAIN_ID]
go-type = "uint64"
description = """
An unique identifier representing a blockchain network."""

[blockchain.CARTESI_BLOCKCHAIN_HTTP_ENDPOINT]
go-type = "string"
description = """
HTTP endpoint for the blockchain RPC provider."""

[blockchain.CARTESI_BLOCKCHAIN_WS_ENDPOINT]
go-type = "string"
description = """
WebSocket endpoint for the blockchain RPC provider."""

[blockchain.CARTESI_BLOCKCHAIN_IS_LEGACY]
default = "false"
go-type = "bool"
description = """
If set to true the node will send transactions using the legacy gas fee model
(instead of EIP-1559)."""

[blockchain.CARTESI_BLOCKCHAIN_FINALITY_OFFSET]
default = "10"
go-type = "int"
description = """
The node assumes that blocks offseted by N from the current block have reached finality
(N is the read depth)."""

[blockchain.CARTESI_BLOCKCHAIN_BLOCK_TIMEOUT]
default = "60"
go-type = "int"
description = """
Block subscription timeout in seconds."""

#
# Contracts
#

[contracts.CARTESI_CONTRACTS_APPLICATION_ADDRESS]
go-type = "string"
description = """
Address of the DApp's contract."""

[contracts.CARTESI_CONTRACTS_APPLICATION_DEPLOYMENT_BLOCK_NUMBER]
go-type = "int64"
description = """
Block in which the DApp's contract was deployed."""

[contracts.CARTESI_CONTRACTS_HISTORY_ADDRESS]
go-type = "string"
description = """
Address of the History contract."""

[contracts.CARTESI_CONTRACTS_AUTHORITY_ADDRESS]
go-type = "string"
description = """
Address of the Authority contract."""

[contracts.CARTESI_CONTRACTS_INPUT_BOX_ADDRESS]
go-type = "string"
description = """
Address of the InputBox contract."""

[blockchain.CARTESI_CONTRACTS_INPUT_BOX_DEPLOYMENT_BLOCK_NUMBER]
go-type = "int64"
description = """
The deployment block for the input box contract.
The node will begin to read blockchain events from this block."""

#
# Snapshot
#

[snapshot.CARTESI_SNAPSHOT_DIR]
go-type = "string"
description = """
Path to the directory with the cartesi-machine snapshot that will be loaded by the node."""

#
# Auth
#

[auth.CARTESI_AUTH_KIND]
default = "mnemonic"
go-type = "AuthKind"
description = """
One of "private_key", "private_key_file", "mnemonic", "mnemonic_file", "aws"."""

[auth.CARTESI_AUTH_PRIVATE_KEY]
go-type = "string"
description = """
The node will use this private key to sign transactions."""

[auth.CARTESI_AUTH_PRIVATE_KEY_FILE]
go-type = "string"
description = """
The node will use the private key contained in this file to sign transactions."""

[auth.CARTESI_AUTH_MNEMONIC]
go-type = "string"
description = """
The node will use the private key generated from this mnemonic to sign transactions."""

[auth.CARTESI_AUTH_MNEMONIC_FILE]
go-type = "string"
description = """
The node will use the private key generated from the mnemonic contained in this file
to sign transactions."""

[auth.CARTESI_AUTH_MNEMONIC_ACCOUNT_INDEX]
default = "0"
go-type = "int"
description = """
When using mnemonics to sign transactions,
the node will use this account index to generate the private key."""

[auth.CARTESI_AUTH_AWS_KMS_KEY_ID]
go-type = "string"
description = """
If set, the node will use the AWS KMS service with this key ID to sign transactions.

Must be set alongside `CARTESI_AUTH_AWS_KMS_REGION`."""

[auth.CARTESI_AUTH_AWS_KMS_REGION]
go-type = "string"
description = """
An AWS KMS Region.

Must be set alongside `CARTESI_AUTH_AWS_KMS_KEY_ID`."""

#
# Postgres
#

[postgres.CARTESI_POSTGRES_ENDPOINT]
default = ""
go-type = "string"
description = """
Postgres endpoint in the 'postgres://user:password@hostname:port/database' format.

If not set, or set to empty string, will defer the behaviour to the PG driver.
See [this](https://www.postgresql.org/docs/current/libpq-envars.html) for more information.

It is also possible to set the endpoint without a password and load it from Postgres' passfile.
See [this](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-PASSFILE)
for more information."""

#
# HTTP
#

[http.CARTESI_HTTP_ADDRESS]
default = "127.0.0.1"
go-type = "string"
description = """
HTTP address for the node."""

[http.CARTESI_HTTP_PORT]
default = "10000"
go-type = "int"
description = """
HTTP port for the node.
The node will also use the 20 ports after this one for internal services."""

#
# Experimental
#

[experimental.CARTESI_EXPERIMENTAL_SUNODO_VALIDATOR_ENABLED]
default = "false"
go-type = "bool"
description = """
When enabled, the node does not start the authority-claimer service and the Redis server."""

[experimental.CARTESI_EXPERIMENTAL_SUNODO_VALIDATOR_REDIS_ENDPOINT]
go-type = "string"
description = """
External Redis endpoint for the node when running in the experimental sunodo validator mode."""

[experimental.CARTESI_EXPERIMENTAL_SERVER_MANAGER_BYPASS_LOG]
default = "false"
go-type = "bool"
description = """
When enabled, prints server-manager output to stdout and stderr directly.
All other log configurations are ignored."""
