// Code generated by internal/config/generate.
// DO NOT EDIT.

// (c) Cartesi and individual authors (see AUTHORS)
// SPDX-License-Identifier: Apache-2.0 (see LICENSE)

package config

import (
	"time"
)

type (
	Duration = time.Duration
)

func getCartesiAuthAwsKmsKeyId() (string, bool) {
	v, ok := getOptional("CARTESI_AUTH_AWS_KMS_KEY_ID", "", false, true, toString)
	return v, ok
}

func getCartesiAuthAwsKmsRegion() (string, bool) {
	v, ok := getOptional("CARTESI_AUTH_AWS_KMS_REGION", "", false, true, toString)
	return v, ok
}

func getCartesiAuthMnemonic() (string, bool) {
	v, ok := getOptional("CARTESI_AUTH_MNEMONIC", "", false, true, toString)
	return v, ok
}

func getCartesiAuthMnemonicAccountIndex() (int, bool) {
	v, ok := getOptional("CARTESI_AUTH_MNEMONIC_ACCOUNT_INDEX", "0", true, true, toInt)
	return v, ok
}

func getCartesiAuthMnemonicFile() (string, bool) {
	v, ok := getOptional("CARTESI_AUTH_MNEMONIC_FILE", "", false, true, toString)
	return v, ok
}

func getCartesiAuthPrivateKey() (string, bool) {
	v, ok := getOptional("CARTESI_AUTH_PRIVATE_KEY", "", false, true, toString)
	return v, ok
}

func GetCartesiBlockchainBlockTimeout() int {
	v := get("CARTESI_BLOCKCHAIN_BLOCK_TIMEOUT", "60", true, false, toInt)
	return v
}

func GetCartesiBlockchainFinalityOffset() int {
	v := get("CARTESI_BLOCKCHAIN_FINALITY_OFFSET", "10", true, false, toInt)
	return v
}

func GetCartesiBlockchainHttpEndpoint() string {
	v := get("CARTESI_BLOCKCHAIN_HTTP_ENDPOINT", "", false, false, toString)
	return v
}

func GetCartesiBlockchainId() uint64 {
	v := get("CARTESI_BLOCKCHAIN_ID", "", false, false, toUint64)
	return v
}

func GetCartesiBlockchainIsLegacy() bool {
	v := get("CARTESI_BLOCKCHAIN_IS_LEGACY", "false", true, false, toBool)
	return v
}

func GetCartesiBlockchainWsEndpoint() string {
	v := get("CARTESI_BLOCKCHAIN_WS_ENDPOINT", "", false, false, toString)
	return v
}

func GetCartesiContractsInputBoxDeploymentBlockNumber() int64 {
	v := get("CARTESI_CONTRACTS_INPUT_BOX_DEPLOYMENT_BLOCK_NUMBER", "", false, false, toInt64)
	return v
}

func GetCartesiContractsApplicationAddress() string {
	v := get("CARTESI_CONTRACTS_APPLICATION_ADDRESS", "", false, false, toString)
	return v
}

func GetCartesiContractsApplicationDeploymentBlockNumber() string {
	v := get("CARTESI_CONTRACTS_APPLICATION_DEPLOYMENT_BLOCK_NUMBER", "", false, false, toString)
	return v
}

func GetCartesiContractsAuthorityAddress() string {
	v := get("CARTESI_CONTRACTS_AUTHORITY_ADDRESS", "", false, false, toString)
	return v
}

func GetCartesiContractsHistoryAddress() string {
	v := get("CARTESI_CONTRACTS_HISTORY_ADDRESS", "", false, false, toString)
	return v
}

func GetCartesiContractsInputBoxAddress() string {
	v := get("CARTESI_CONTRACTS_INPUT_BOX_ADDRESS", "", false, false, toString)
	return v
}

func GetCartesiExperimentalSunodoValidatorEnabled() bool {
	v := get("CARTESI_EXPERIMENTAL_SUNODO_VALIDATOR_ENABLED", "false", true, false, toBool)
	return v
}

func GetCartesiExperimentalSunodoValidatorRedisEndpoint() string {
	v := get("CARTESI_EXPERIMENTAL_SUNODO_VALIDATOR_REDIS_ENDPOINT", "", false, false, toString)
	return v
}

func GetCartesiFeatureDisableClaimer() bool {
	v := get("CARTESI_FEATURE_DISABLE_CLAIMER", "false", true, false, toBool)
	return v
}

func GetCartesiFeatureDisableMachineHashCheck() bool {
	v := get("CARTESI_FEATURE_DISABLE_MACHINE_HASH_CHECK", "false", true, false, toBool)
	return v
}

func GetCartesiFeatureHostMode() bool {
	v := get("CARTESI_FEATURE_HOST_MODE", "false", true, false, toBool)
	return v
}

func GetCartesiHttpAddress() string {
	v := get("CARTESI_HTTP_ADDRESS", "127.0.0.1", true, false, toString)
	return v
}

func GetCartesiHttpPort() int {
	v := get("CARTESI_HTTP_PORT", "10000", true, false, toInt)
	return v
}

func GetCartesiLogLevel() LogLevel {
	v := get("CARTESI_LOG_LEVEL", "info", true, false, toLogLevel)
	return v
}

func GetCartesiLogTimestamp() bool {
	v := get("CARTESI_LOG_TIMESTAMP", "false", true, false, toBool)
	return v
}

func GetCartesiPostgresEndpoint() string {
	v := get("CARTESI_POSTGRES_ENDPOINT", "", true, true, toString)
	return v
}

func GetCartesiEpochDuration() Duration {
	v := get("CARTESI_EPOCH_DURATION", "86400", true, false, toDuration)
	return v
}

func GetCartesiSnapshotDir() string {
	v := get("CARTESI_SNAPSHOT_DIR", "", false, false, toString)
	return v
}
