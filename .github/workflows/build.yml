# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build and test

on:
  pull_request:
  push:
    tags:
      - v*
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write
  id-token: write
  contents: write

jobs:
  test:
    runs-on: ubuntu-22.04
    env:
      RUSTFLAGS: -D warnings -C debuginfo=0
    defaults:
      run:
        working-directory: offchain
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: ðŸ“¦ Install protoc
        run: sudo apt update && sudo apt install -y protobuf-compiler libprotobuf-dev

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            offchain/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install cargo sweep
        run: cargo install cargo-sweep
        continue-on-error: true

      - name: Install cargo cache
        run: cargo install cargo-cache
        continue-on-error: true

      - name: Set sweep timestamp
        run: cargo sweep -s

      - name: Build binaries and tests
        run: cargo build --all-targets

      - name: Clean old build files
        run: cargo sweep -f

      - name: Clean dependencies source files
        run: cargo cache --autoclean

      - name: Run tests
        run: cargo test

      - name: Generate GraphQL schema
        run: ./target/debug/generate-schema

      - name: Upload GraphQL schema
        uses: actions/upload-artifact@v4
        with:
          name: graphql-schema
          path: offchain/schema.graphql
          if-no-files-found: error

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - uses: depot/setup-action@v1

      - name: Build and load devnet image
        uses: depot/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ./docker-bake.override.hcl
            ./docker-bake.platforms.hcl
          targets: rollups-node-devnet
          project: ${{ vars.DEPOT_PROJECT }}
          workdir: build
          load: true

      - name: Run Go tests
        working-directory: ${{ github.workspace }}
        run: go test ./...

  build_docker:
    runs-on: ubuntu-22.04
    needs:
      - test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/cartesi/rollups-node
            name=docker.io/cartesi/rollups-node,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: depot/setup-action@v1
      - name: Build and push docker image
        id: docker_build
        uses: depot/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
            ./docker-bake.platforms.hcl
          targets: rollups-node
          push: true
          project: ${{ vars.DEPOT_PROJECT }}
          workdir: build

  release:
    needs: [test, build_docker]
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Trim CHANGELOG.md
        run: sed -e '0,/^##[^#]/d' -e '/^##[^#]/,$d' -i CHANGELOG.md

      - name: Download GraphQL schema
        uses: actions/download-artifact@v4
        with:
          name: graphql-schema

      - name: Publish Github release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          body_path: CHANGELOG.md
          files: schema.graphql
